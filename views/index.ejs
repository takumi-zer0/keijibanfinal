<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>電光掲示板</title>
</head>

<body>
    <div class="disc">
        <h1>ENTER TEXT</h1>
        <form action="/api" method="POST">
            <input type="text" name="inputText" id="inputText" placeholder="HELLO">
            <input type="submit" value="Generate!">
        </form>
    </div>

    <button onclick="notifyMe()">Notify me!</button>

        <% for(var i = 0; i < 5; i++){ %>
                <div class="row">
        <% for(var j = 0; j < 40; j++){ %>
            <div class="label" id="<%= i %>-<%=j%>"></div>
       <% }%>
    </div>
       <% }%>

  <script>
    function notifyMe() {
        console.log("fds")
        // Let's check if the browser supports notifications
        if (!("Notification" in window)) {
            alert("This browser does not support desktop notification");
        }

        // Let's check whether notification permissions have already been granted
        else if (Notification.permission === "granted") {
            // If it's okay let's create a notification
            var notification = new Notification("Hi there!");
        }

        // Otherwise, we need to ask the user for permission
        else if (Notification.permission !== "denied") {
            Notification.requestPermission().then(function (permission) {
                // If the user accepts, let's create a notification
                if (permission === "granted") {
                    var notification = new Notification("Hi there!");
                }
            });
        }

        // At last, if the user has denied notifications, and you
        // want to be respectful there is no need to bother them any more.
    }


      var test = <%- JSON.stringify(pixel) %>
      var length = <%- JSON.stringify(length) %>
      console.log(length)

      function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

    async function demo() {
        var count = 50;
        var set1 = test;
        console.log(set1)
        while (count > -6 * length) {
            for (var i = 0; i < 5; i++) {
                for (var j = 0; j < 40; j++) {
                        var set = set1[i].map(n => n + count);

                        if (set.includes(j)) {
                            let target = document.getElementById(i + "-" + j);
                            target.classList.add("on")
                        } else {
                            let target = document.getElementById(i + "-" + j);
                            target.classList.remove("on")
                        }
                }
            }
            count--;
            await sleep(70);
            if(count == -6 * length + 1){
                count = 50;
            }
        }
    }

        demo();

  </script>



            <style>
                .on {
                    background-color: black !important;
                }

                .disc {
                    text-align: center;
                    margin: 1rem;
                }

                .label {
                    background-color: rgb(168, 210, 234);
                    height: 20px;
                    width: 20px;
                }

                .row {
                    display: flex;
                    justify-content: center;
                }
            </style>
</body>

</html>